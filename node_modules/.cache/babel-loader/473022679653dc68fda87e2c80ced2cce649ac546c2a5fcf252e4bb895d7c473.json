{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Github, Mail } from \"lucide-react\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { setDoc, doc } from \"firebase/firestore\";\nimport { auth, db } from \"./firebase\"; // Ensure this imports your Firebase configuration\nimport \"./App.css\";\nimport darkblue from \"./assets/darkblue.mp4\";\nimport { useNavigate } from \"react-router-dom\";\nexport default function App() {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [role, setRole] = useState(\"student\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const navigate = useNavigate();\n  const videoRef = useRef(null);\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.play().catch(error => {\n        console.error(\"Error attempting to play video: \", error);\n      });\n    }\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(\"\");\n    if (isLogin) {\n      // Hardcoded Admin Login  \n      if (email === \"admin@test.com\" && password === \"admin1234\") {\n        setSuccess(\"Admin logged in successfully!\");\n        navigate(\"/admin/AdminDashboard\");\n        return;\n      }\n\n      // Regular user login via Firebase  \n      try {\n        await signInWithEmailAndPassword(auth, email, password);\n        setSuccess(\"Logged in successfully!\");\n        navigate(\"/user/chat\");\n      } catch (error) {\n        setError(error.message);\n      }\n    } else {\n      // Sign up logic for regular users  \n      if (password !== confirmPassword) {\n        setError(\"Passwords do not match\");\n        return;\n      }\n      try {\n        const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n        const user = userCredential.user;\n\n        // Save additional user data to Firestore  \n        await setDoc(doc(db, \"Users\", user.uid), {\n          email: user.email,\n          name: name,\n          role: role,\n          photo: \"\" // Add a default photo URL here if needed  \n        });\n        setSuccess(\"Account created successfully!\");\n        if (role === \"admin\") {\n          navigate(\"/admin/AdminDashboard\");\n        } else {\n          navigate(\"/user/chat\");\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    }\n  };\n\n  // ... rest of your component code (form JSX, etc.) ...\n}\n_s(App, \"0zn1h07ft7TpBSXWtayjc9VaM/8=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Github","Mail","createUserWithEmailAndPassword","signInWithEmailAndPassword","setDoc","doc","auth","db","darkblue","useNavigate","App","_s","isLogin","setIsLogin","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","name","setName","role","setRole","error","setError","success","setSuccess","navigate","videoRef","current","play","catch","console","handleSubmit","e","preventDefault","message","userCredential","user","uid","photo","_c","$RefreshReg$"],"sources":["C:/Users/Ammar Abdulhussain/Desktop/phullstack/src/App.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Github, Mail } from \"lucide-react\";\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { setDoc, doc } from \"firebase/firestore\";\r\nimport { auth, db } from \"./firebase\"; // Ensure this imports your Firebase configuration\r\nimport \"./App.css\";\r\nimport darkblue from \"./assets/darkblue.mp4\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function App() {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [role, setRole] = useState(\"student\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const videoRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (videoRef.current) {\r\n      videoRef.current.play().catch((error) => {\r\n        console.error(\"Error attempting to play video: \", error);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {  \r\n    e.preventDefault();  \r\n    setError(\"\");  \r\n    setSuccess(\"\");  \r\n     \r\n    if (isLogin) {  \r\n      // Hardcoded Admin Login  \r\n      if (email === \"admin@test.com\" && password === \"admin1234\") {  \r\n        setSuccess(\"Admin logged in successfully!\");  \r\n        navigate(\"/admin/AdminDashboard\");\r\n        return;\r\n      }  \r\n     \r\n      // Regular user login via Firebase  \r\n      try {  \r\n        await signInWithEmailAndPassword(auth, email, password);  \r\n        setSuccess(\"Logged in successfully!\");  \r\n        navigate(\"/user/chat\");\r\n      } catch (error) {  \r\n        setError(error.message);  \r\n      }  \r\n    } else {  \r\n      // Sign up logic for regular users  \r\n      if (password !== confirmPassword) {  \r\n        setError(\"Passwords do not match\");  \r\n        return;  \r\n      }  \r\n     \r\n      try {  \r\n        const userCredential = await createUserWithEmailAndPassword(auth, email, password);  \r\n        const user = userCredential.user;  \r\n     \r\n        // Save additional user data to Firestore  \r\n        await setDoc(doc(db, \"Users\", user.uid), {  \r\n          email: user.email,  \r\n          name: name,  \r\n          role: role,  \r\n          photo: \"\" // Add a default photo URL here if needed  \r\n        });  \r\n     \r\n        setSuccess(\"Account created successfully!\");  \r\n        if (role === \"admin\") {  \r\n          navigate(\"/admin/AdminDashboard\");\r\n        } else {  \r\n          navigate(\"/user/chat\");\r\n        }  \r\n      } catch (error) {  \r\n        setError(error.message);  \r\n      }  \r\n    }  \r\n  };\r\n\r\n  // ... rest of your component code (form JSX, etc.) ...\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}