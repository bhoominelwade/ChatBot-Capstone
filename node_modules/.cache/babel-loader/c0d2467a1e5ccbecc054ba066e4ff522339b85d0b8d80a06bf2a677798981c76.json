{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ammar Abdulhussain\\\\Desktop\\\\phullstack\\\\src\\\\user\\\\chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { auth, db } from '../firebase';\nimport { doc, getDoc, updateDoc } from 'firebase/firestore';\nimport { UserCircle, MessageSquare, PlusCircle, Bell, Send, X, RefreshCw, Volume2, Download, AlertCircle, LogOut } from 'lucide-react';\nimport './chat.css';\nimport darkblue from \"../assets/darkblue.mp4\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotUI = () => {\n  _s();\n  const navigate = useNavigate();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([{\n    text: 'Hello! How can I assist you today?',\n    type: 'ai'\n  }]);\n  const [showAnnouncements, setShowAnnouncements] = useState(false);\n  const [showUserPanel, setShowUserPanel] = useState(false);\n  const [showNotifications, setShowNotifications] = useState(false);\n  const [isSending, setIsSending] = useState(false);\n  const [announcements, setAnnouncements] = useState([]);\n  const [notifications, setNotifications] = useState([]);\n  const [loadingAnnouncements, setLoadingAnnouncements] = useState(false);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [userProfile, setUserProfile] = useState({\n    name: '',\n    email: '',\n    role: '',\n    photo: ''\n  });\n  const videoRef = useRef(null);\n  const chatContainerRef = useRef(null);\n  const announcementsRef = useRef(null);\n  const notificationsRef = useRef(null);\n\n  // Fetch user profile and set up notification subscription\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      const user = auth.currentUser;\n      if (user) {\n        try {\n          const userDoc = await getDoc(doc(db, 'Users', user.uid));\n          if (userDoc.exists()) {\n            const userData = userDoc.data();\n            setUserProfile({\n              name: userData.name,\n              email: user.email,\n              role: userData.role,\n              photo: userData.photo || ''\n            });\n          }\n        } catch (error) {\n          console.error('Error fetching user profile:', error);\n        }\n      } else {\n        navigate('/login');\n      }\n    };\n    fetchUserProfile();\n  }, [navigate]);\n\n  // Subscribe to notifications\n  useEffect(() => {\n    if (userProfile.role) {\n      const normalizedRole = userProfile.role.toLowerCase().replace('/', '_').replace(' ', '_');\n      const unsubscribe = db.collection('notifications').where('role', '==', normalizedRole).orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n        const newNotifications = snapshot.docs.map(doc => {\n          var _doc$data$timestamp;\n          return {\n            id: doc.id,\n            ...doc.data(),\n            timestamp: (_doc$data$timestamp = doc.data().timestamp) === null || _doc$data$timestamp === void 0 ? void 0 : _doc$data$timestamp.toDate()\n          };\n        });\n        setNotifications(newNotifications);\n        setUnreadCount(newNotifications.filter(n => !n.read).length);\n      });\n      return () => unsubscribe();\n    }\n  }, [userProfile.role]);\n\n  // Fetch announcements when panel is opened\n  useEffect(() => {\n    if (showAnnouncements && userProfile.role) {\n      fetchAnnouncements();\n    }\n  }, [showAnnouncements, userProfile.role]);\n\n  // Auto-scroll chat\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  // Scroll panels to top when content changes\n  useEffect(() => {\n    if (announcementsRef.current && !loadingAnnouncements) {\n      announcementsRef.current.scrollTop = 0;\n    }\n    if (notificationsRef.current) {\n      notificationsRef.current.scrollTop = 0;\n    }\n  }, [announcements, notifications, loadingAnnouncements]);\n  const fetchAnnouncements = async () => {\n    setLoadingAnnouncements(true);\n    try {\n      const normalizedRole = userProfile.role.toLowerCase().replace('/', '_').replace(' ', '_');\n      const response = await axios.get(`http://localhost:8000/announcements/${normalizedRole}`);\n      setAnnouncements(response.data.announcements);\n    } catch (error) {\n      console.error('Error fetching announcements:', error);\n    } finally {\n      setLoadingAnnouncements(false);\n    }\n  };\n  const markNotificationAsRead = async notificationId => {\n    try {\n      await updateDoc(doc(db, 'notifications', notificationId), {\n        read: true\n      });\n    } catch (error) {\n      console.error('Error marking notification as read:', error);\n    }\n  };\n  const handleLogout = async () => {\n    try {\n      await auth.signOut();\n      navigate('/login');\n    } catch (error) {\n      console.error('Error logging out:', error);\n    }\n  };\n  const togglePanel = panel => {\n    setShowNotifications(panel === 'notifications');\n    setShowAnnouncements(panel === 'announcements');\n    setShowUserPanel(panel === 'profile');\n  };\n\n  // Rest of your existing functions (sendMessage, playTextToSpeech, regenerateResponse, etc.)...\n\n  const renderNotifications = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notifications-panel\",\n    ref: notificationsRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => togglePanel(null),\n        children: /*#__PURE__*/_jsxDEV(X, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-content\",\n      children: notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-notifications\",\n        children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"No notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this) : notifications.map(notification => {\n        var _notification$timesta;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `notification-item ${!notification.read ? 'unread' : ''}`,\n          onClick: () => markNotificationAsRead(notification.id),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `role-badge ${notification.role}`,\n              children: \"Important Announcement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timestamp\",\n              children: (_notification$timesta = notification.timestamp) === null || _notification$timesta === void 0 ? void 0 : _notification$timesta.toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), !notification.read && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"unread-dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"notification-text\",\n            children: notification.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)]\n        }, notification.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      id: \"background-video\",\n      loop: true,\n      autoPlay: true,\n      muted: true,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: darkblue,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), \"Your browser does not support the video tag.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `sidebar-button ${showUserPanel ? 'active' : ''}`,\n          onClick: () => togglePanel('profile'),\n          children: /*#__PURE__*/_jsxDEV(UserCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sidebar-button\",\n          children: /*#__PURE__*/_jsxDEV(MessageSquare, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sidebar-button\",\n          children: /*#__PURE__*/_jsxDEV(PlusCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `sidebar-button ${showAnnouncements ? 'active' : ''}`,\n          onClick: () => togglePanel('announcements'),\n          children: /*#__PURE__*/_jsxDEV(Bell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `sidebar-button notification-button ${showNotifications ? 'active' : ''}`,\n          onClick: () => togglePanel('notifications'),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-icon-container\",\n            children: [/*#__PURE__*/_jsxDEV(Bell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"notification-badge\",\n              children: unreadCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        style: {\n          marginRight: showAnnouncements || showUserPanel || showNotifications ? '320px' : '0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-area\",\n          ref: chatContainerRef,\n          children: messages.map((msg, index) => renderMessage(msg, index))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyDown: e => e.key === 'Enter' && !e.shiftKey && sendMessage(),\n            placeholder: \"Type a message or 'doc:' to request a document...\",\n            disabled: isSending\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"send-button\",\n            onClick: sendMessage,\n            disabled: isSending,\n            children: isSending ? /*#__PURE__*/_jsxDEV(RefreshCw, {\n              className: \"spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 28\n            }, this) : /*#__PURE__*/_jsxDEV(Send, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), showAnnouncements && renderAnnouncements(), showNotifications && renderNotifications(), showUserPanel && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => togglePanel(null),\n            children: /*#__PURE__*/_jsxDEV(X, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-avatar\",\n            children: userProfile.photo ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: userProfile.photo,\n              alt: \"User Avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(UserCircle, {\n              size: 64\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: userProfile.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: userProfile.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"role-badge\",\n              children: userProfile.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"logout-button\",\n            onClick: handleLogout,\n            children: [/*#__PURE__*/_jsxDEV(LogOut, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this), \"Logout\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatbotUI, \"kCM13RH8J1v4ec1P4B1GAz5ghrU=\", false, function () {\n  return [useNavigate];\n});\n_c = ChatbotUI;\nexport default ChatbotUI;\nvar _c;\n$RefreshReg$(_c, \"ChatbotUI\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","auth","db","doc","getDoc","updateDoc","UserCircle","MessageSquare","PlusCircle","Bell","Send","X","RefreshCw","Volume2","Download","AlertCircle","LogOut","darkblue","useNavigate","jsxDEV","_jsxDEV","ChatbotUI","_s","navigate","message","setMessage","messages","setMessages","text","type","showAnnouncements","setShowAnnouncements","showUserPanel","setShowUserPanel","showNotifications","setShowNotifications","isSending","setIsSending","announcements","setAnnouncements","notifications","setNotifications","loadingAnnouncements","setLoadingAnnouncements","unreadCount","setUnreadCount","userProfile","setUserProfile","name","email","role","photo","videoRef","chatContainerRef","announcementsRef","notificationsRef","fetchUserProfile","user","currentUser","userDoc","uid","exists","userData","data","error","console","normalizedRole","toLowerCase","replace","unsubscribe","collection","where","orderBy","onSnapshot","snapshot","newNotifications","docs","map","_doc$data$timestamp","id","timestamp","toDate","filter","n","read","length","fetchAnnouncements","current","scrollTop","scrollHeight","response","get","markNotificationAsRead","notificationId","handleLogout","signOut","togglePanel","panel","renderNotifications","className","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","notification","_notification$timesta","toLocaleString","loop","autoPlay","muted","src","style","marginRight","msg","index","renderMessage","value","onChange","e","target","onKeyDown","key","shiftKey","sendMessage","placeholder","disabled","renderAnnouncements","alt","_c","$RefreshReg$"],"sources":["C:/Users/Ammar Abdulhussain/Desktop/phullstack/src/user/chat.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { auth, db } from '../firebase';\r\nimport { doc, getDoc, updateDoc } from 'firebase/firestore';\r\nimport {\r\n  UserCircle,\r\n  MessageSquare,\r\n  PlusCircle,\r\n  Bell,\r\n  Send,\r\n  X,\r\n  RefreshCw,\r\n  Volume2,\r\n  Download,\r\n  AlertCircle,\r\n  LogOut\r\n} from 'lucide-react';\r\nimport './chat.css';\r\nimport darkblue from \"../assets/darkblue.mp4\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ChatbotUI = () => {\r\n  const navigate = useNavigate();\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([\r\n    { text: 'Hello! How can I assist you today?', type: 'ai' }\r\n  ]);\r\n  const [showAnnouncements, setShowAnnouncements] = useState(false);\r\n  const [showUserPanel, setShowUserPanel] = useState(false);\r\n  const [showNotifications, setShowNotifications] = useState(false);\r\n  const [isSending, setIsSending] = useState(false);\r\n  const [announcements, setAnnouncements] = useState([]);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [loadingAnnouncements, setLoadingAnnouncements] = useState(false);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [userProfile, setUserProfile] = useState({\r\n    name: '',\r\n    email: '',\r\n    role: '',\r\n    photo: ''\r\n  });\r\n\r\n  const videoRef = useRef(null);\r\n  const chatContainerRef = useRef(null);\r\n  const announcementsRef = useRef(null);\r\n  const notificationsRef = useRef(null);\r\n\r\n  // Fetch user profile and set up notification subscription\r\n  useEffect(() => {\r\n    const fetchUserProfile = async () => {\r\n      const user = auth.currentUser;\r\n      if (user) {\r\n        try {\r\n          const userDoc = await getDoc(doc(db, 'Users', user.uid));\r\n          if (userDoc.exists()) {\r\n            const userData = userDoc.data();\r\n            setUserProfile({\r\n              name: userData.name,\r\n              email: user.email,\r\n              role: userData.role,\r\n              photo: userData.photo || ''\r\n            });\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching user profile:', error);\r\n        }\r\n      } else {\r\n        navigate('/login');\r\n      }\r\n    };\r\n\r\n    fetchUserProfile();\r\n  }, [navigate]);\r\n\r\n  // Subscribe to notifications\r\n  useEffect(() => {\r\n    if (userProfile.role) {\r\n      const normalizedRole = userProfile.role.toLowerCase().replace('/', '_').replace(' ', '_');\r\n      const unsubscribe = db.collection('notifications')\r\n        .where('role', '==', normalizedRole)\r\n        .orderBy('timestamp', 'desc')\r\n        .onSnapshot(snapshot => {\r\n          const newNotifications = snapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n            timestamp: doc.data().timestamp?.toDate()\r\n          }));\r\n          setNotifications(newNotifications);\r\n          setUnreadCount(newNotifications.filter(n => !n.read).length);\r\n        });\r\n\r\n      return () => unsubscribe();\r\n    }\r\n  }, [userProfile.role]);\r\n\r\n  // Fetch announcements when panel is opened\r\n  useEffect(() => {\r\n    if (showAnnouncements && userProfile.role) {\r\n      fetchAnnouncements();\r\n    }\r\n  }, [showAnnouncements, userProfile.role]);\r\n\r\n  // Auto-scroll chat\r\n  useEffect(() => {\r\n    if (chatContainerRef.current) {\r\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  // Scroll panels to top when content changes\r\n  useEffect(() => {\r\n    if (announcementsRef.current && !loadingAnnouncements) {\r\n      announcementsRef.current.scrollTop = 0;\r\n    }\r\n    if (notificationsRef.current) {\r\n      notificationsRef.current.scrollTop = 0;\r\n    }\r\n  }, [announcements, notifications, loadingAnnouncements]);\r\n\r\n  const fetchAnnouncements = async () => {\r\n    setLoadingAnnouncements(true);\r\n    try {\r\n      const normalizedRole = userProfile.role.toLowerCase().replace('/', '_').replace(' ', '_');\r\n      const response = await axios.get(`http://localhost:8000/announcements/${normalizedRole}`);\r\n      setAnnouncements(response.data.announcements);\r\n    } catch (error) {\r\n      console.error('Error fetching announcements:', error);\r\n    } finally {\r\n      setLoadingAnnouncements(false);\r\n    }\r\n  };\r\n\r\n  const markNotificationAsRead = async (notificationId) => {\r\n    try {\r\n      await updateDoc(doc(db, 'notifications', notificationId), {\r\n        read: true\r\n      });\r\n    } catch (error) {\r\n      console.error('Error marking notification as read:', error);\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await auth.signOut();\r\n      navigate('/login');\r\n    } catch (error) {\r\n      console.error('Error logging out:', error);\r\n    }\r\n  };\r\n\r\n  const togglePanel = (panel) => {\r\n    setShowNotifications(panel === 'notifications');\r\n    setShowAnnouncements(panel === 'announcements');\r\n    setShowUserPanel(panel === 'profile');\r\n  };\r\n\r\n  // Rest of your existing functions (sendMessage, playTextToSpeech, regenerateResponse, etc.)...\r\n\r\n  const renderNotifications = () => (\r\n    <div className=\"notifications-panel\" ref={notificationsRef}>\r\n      <div className=\"panel-header\">\r\n        <h2>Notifications</h2>\r\n        <button onClick={() => togglePanel(null)}>\r\n          <X size={20} />\r\n        </button>\r\n      </div>\r\n      <div className=\"notifications-content\">\r\n        {notifications.length === 0 ? (\r\n          <div className=\"no-notifications\">\r\n            <AlertCircle size={24} />\r\n            <span>No notifications</span>\r\n          </div>\r\n        ) : (\r\n          notifications.map((notification) => (\r\n            <div\r\n              key={notification.id}\r\n              className={`notification-item ${!notification.read ? 'unread' : ''}`}\r\n              onClick={() => markNotificationAsRead(notification.id)}\r\n            >\r\n              <div className=\"notification-header\">\r\n                <span className={`role-badge ${notification.role}`}>\r\n                  Important Announcement\r\n                </span>\r\n                <span className=\"timestamp\">\r\n                  {notification.timestamp?.toLocaleString()}\r\n                </span>\r\n              </div>\r\n              {!notification.read && <div className=\"unread-dot\" />}\r\n              <p className=\"notification-text\">{notification.text}</p>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <video ref={videoRef} id=\"background-video\" loop autoPlay muted>\r\n        <source src={darkblue} type=\"video/mp4\" />\r\n        Your browser does not support the video tag.\r\n      </video>\r\n\r\n      <div className=\"chatbot-window\">\r\n        <div className=\"sidebar\">\r\n          <button \r\n            className={`sidebar-button ${showUserPanel ? 'active' : ''}`}\r\n            onClick={() => togglePanel('profile')}\r\n          >\r\n            <UserCircle />\r\n          </button>\r\n          <button className=\"sidebar-button\">\r\n            <MessageSquare />\r\n          </button>\r\n          <button className=\"sidebar-button\">\r\n            <PlusCircle />\r\n          </button>\r\n          <button \r\n            className={`sidebar-button ${showAnnouncements ? 'active' : ''}`}\r\n            onClick={() => togglePanel('announcements')}\r\n          >\r\n            <Bell />\r\n          </button>\r\n          <button \r\n            className={`sidebar-button notification-button ${showNotifications ? 'active' : ''}`}\r\n            onClick={() => togglePanel('notifications')}\r\n          >\r\n            <div className=\"notification-icon-container\">\r\n              <Bell />\r\n              {unreadCount > 0 && (\r\n                <span className=\"notification-badge\">{unreadCount}</span>\r\n              )}\r\n            </div>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"main-content\" style={{ \r\n          marginRight: (showAnnouncements || showUserPanel || showNotifications) ? '320px' : '0' \r\n        }}>\r\n          <div className=\"chat-area\" ref={chatContainerRef}>\r\n            {messages.map((msg, index) => renderMessage(msg, index))}\r\n          </div>\r\n\r\n          <div className=\"input-area\">\r\n            <input\r\n              type=\"text\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              onKeyDown={(e) => e.key === 'Enter' && !e.shiftKey && sendMessage()}\r\n              placeholder=\"Type a message or 'doc:' to request a document...\"\r\n              disabled={isSending}\r\n            />\r\n            <button \r\n              className=\"send-button\" \r\n              onClick={sendMessage} \r\n              disabled={isSending}\r\n            >\r\n              {isSending ? <RefreshCw className=\"spin\" /> : <Send />}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {showAnnouncements && renderAnnouncements()}\r\n        {showNotifications && renderNotifications()}\r\n        \r\n        {showUserPanel && (\r\n          <div className=\"user-panel\">\r\n            <div className=\"panel-header\">\r\n              <h2>Profile</h2>\r\n              <button onClick={() => togglePanel(null)}>\r\n                <X size={20} />\r\n              </button>\r\n            </div>\r\n            <div className=\"profile-content\">\r\n              <div className=\"profile-avatar\">\r\n                {userProfile.photo ? (\r\n                  <img src={userProfile.photo} alt=\"User Avatar\" />\r\n                ) : (\r\n                  <UserCircle size={64} />\r\n                )}\r\n              </div>\r\n              <div className=\"profile-info\">\r\n                <h3>{userProfile.name}</h3>\r\n                <p>{userProfile.email}</p>\r\n                <p className=\"role-badge\">{userProfile.role}</p>\r\n              </div>\r\n              <button className=\"logout-button\" onClick={handleLogout}>\r\n                <LogOut size={16} />\r\n                Logout\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatbotUI;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}