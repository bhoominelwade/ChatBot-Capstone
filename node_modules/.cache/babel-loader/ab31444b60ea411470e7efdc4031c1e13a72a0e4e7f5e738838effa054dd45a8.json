{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ammar Abdulhussain\\\\Desktop\\\\phullstack\\\\src\\\\user\\\\chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { auth, db } from '../firebase';\nimport { doc, getDoc, updateDoc } from 'firebase/firestore';\nimport { UserCircle, MessageSquare, PlusCircle, Bell, Send, X, RefreshCw, Volume2, Download, AlertCircle, LogOut } from 'lucide-react';\nimport './chat.css';\nimport darkblue from \"../assets/darkblue.mp4\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatbotUI = () => {\n  _s();\n  const navigate = useNavigate();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([{\n    text: 'Hello! How can I assist you today?',\n    type: 'ai'\n  }]);\n  const [showAnnouncements, setShowAnnouncements] = useState(false);\n  const [showUserPanel, setShowUserPanel] = useState(false);\n  const [showNotifications, setShowNotifications] = useState(false);\n  const [isSending, setIsSending] = useState(false);\n  const [announcements, setAnnouncements] = useState([]);\n  const [notifications, setNotifications] = useState([]);\n  const [loadingAnnouncements, setLoadingAnnouncements] = useState(false);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [userProfile, setUserProfile] = useState({\n    name: '',\n    email: '',\n    role: '',\n    photo: ''\n  });\n  const videoRef = useRef(null);\n  const chatContainerRef = useRef(null);\n  const announcementsRef = useRef(null);\n  const notificationsRef = useRef(null);\n\n  // Fetch user profile and set up notification subscription\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      const user = auth.currentUser;\n      if (user) {\n        try {\n          const userDoc = await getDoc(doc(db, 'Users', user.uid));\n          if (userDoc.exists()) {\n            const userData = userDoc.data();\n            setUserProfile({\n              name: userData.name,\n              email: user.email,\n              role: userData.role,\n              photo: userData.photo || ''\n            });\n          }\n        } catch (error) {\n          console.error('Error fetching user profile:', error);\n        }\n      } else {\n        navigate('/login');\n      }\n    };\n    fetchUserProfile();\n  }, [navigate]);\n\n  // Subscribe to notifications\n  useEffect(() => {\n    if (userProfile.role) {\n      const normalizedRole = userProfile.role.toLowerCase().replace('/', '_').replace(' ', '_');\n      const unsubscribe = db.collection('notifications').where('role', '==', normalizedRole).orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n        const newNotifications = snapshot.docs.map(doc => {\n          var _doc$data$timestamp;\n          return {\n            id: doc.id,\n            ...doc.data(),\n            timestamp: (_doc$data$timestamp = doc.data().timestamp) === null || _doc$data$timestamp === void 0 ? void 0 : _doc$data$timestamp.toDate()\n          };\n        });\n        setNotifications(newNotifications);\n        setUnreadCount(newNotifications.filter(n => !n.read).length);\n      });\n      return () => unsubscribe();\n    }\n  }, [userProfile.role]);\n\n  // Fetch announcements when panel is opened\n  useEffect(() => {\n    if (showAnnouncements && userProfile.role) {\n      fetchAnnouncements();\n    }\n  }, [showAnnouncements, userProfile.role]);\n\n  // Auto-scroll chat\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  // Scroll panels to top when content changes\n  useEffect(() => {\n    if (announcementsRef.current && !loadingAnnouncements) {\n      announcementsRef.current.scrollTop = 0;\n    }\n    if (notificationsRef.current) {\n      notificationsRef.current.scrollTop = 0;\n    }\n  }, [announcements, notifications, loadingAnnouncements]);\n  const sendMessage = async () => {\n    if (message.trim() && !isSending) {\n      const userMessage = {\n        text: message,\n        type: 'user'\n      };\n      setMessages(prevMessages => [...prevMessages, userMessage]);\n      setMessage('');\n      setIsSending(true);\n      try {\n        if (message.startsWith('doc:')) {\n          const fileName = message.slice(4).trim();\n          const response = await axios.post('http://localhost:8000/retrieve-document/', {\n            fileName,\n            userRole: userProfile.role\n          });\n          if (response.data.canAccess) {\n            const botMessage = {\n              text: `Here's the document you requested: ${fileName}`,\n              type: 'ai',\n              downloadUrl: response.data.downloadUrl\n            };\n            setMessages(prevMessages => [...prevMessages, botMessage]);\n          } else {\n            const botMessage = {\n              text: 'Access Denied: You don\\'t have permission to access this document.',\n              type: 'ai',\n              isError: true\n            };\n            setMessages(prevMessages => [...prevMessages, botMessage]);\n          }\n        } else {\n          const response = await axios.post('http://localhost:8000/chat/', {\n            message,\n            userRole: userProfile.role\n          });\n          const botMessage = {\n            text: response.data.response,\n            type: 'ai'\n          };\n          setMessages(prevMessages => [...prevMessages, botMessage]);\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n        const errorMessage = {\n          text: 'Sorry, I encountered an error. Please try again.',\n          type: 'ai',\n          isError: true\n        };\n        setMessages(prevMessages => [...prevMessages, errorMessage]);\n      } finally {\n        setIsSending(false);\n      }\n    }\n  };\n  const fetchAnnouncements = async () => {\n    setLoadingAnnouncements(true);\n    try {\n      const normalizedRole = userProfile.role.toLowerCase().replace('/', '_').replace(' ', '_');\n      const response = await axios.get(`http://localhost:8000/announcements/${normalizedRole}`);\n      setAnnouncements(response.data.announcements);\n    } catch (error) {\n      console.error('Error fetching announcements:', error);\n    } finally {\n      setLoadingAnnouncements(false);\n    }\n  };\n  const markNotificationAsRead = async notificationId => {\n    try {\n      await updateDoc(doc(db, 'notifications', notificationId), {\n        read: true\n      });\n    } catch (error) {\n      console.error('Error marking notification as read:', error);\n    }\n  };\n  const handleLogout = async () => {\n    try {\n      await auth.signOut();\n      navigate('/login');\n    } catch (error) {\n      console.error('Error logging out:', error);\n    }\n  };\n  const togglePanel = panel => {\n    setShowNotifications(panel === 'notifications');\n    setShowAnnouncements(panel === 'announcements');\n    setShowUserPanel(panel === 'profile');\n  };\n  const renderMessage = (msg, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message-container ${msg.type === 'user' ? 'user-message-container' : 'ai-message-container'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.type === 'user' ? 'user-message' : 'ai-message'} ${msg.isError ? 'error-message' : ''}`,\n        children: [msg.text.startsWith('doc:') ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"doc-highlight\",\n            children: \"doc:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), msg.text.slice(4)]\n        }, void 0, true) : msg.text, msg.downloadUrl && /*#__PURE__*/_jsxDEV(\"a\", {\n          href: msg.downloadUrl,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"download-link\",\n          children: [/*#__PURE__*/_jsxDEV(Download, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), \" Download\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), msg.type === 'ai' && !msg.isError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          onClick: () => regenerateResponse(index),\n          disabled: isSending,\n          children: /*#__PURE__*/_jsxDEV(RefreshCw, {\n            size: 16,\n            className: isSending ? 'spin' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          onClick: () => playTextToSpeech(msg.text),\n          children: /*#__PURE__*/_jsxDEV(Volume2, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Rest of your existing functions (sendMessage, playTextToSpeech, regenerateResponse, etc.)...\n\n  const renderNotifications = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notifications-panel\",\n    ref: notificationsRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => togglePanel(null),\n        children: /*#__PURE__*/_jsxDEV(X, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-content\",\n      children: notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-notifications\",\n        children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"No notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this) : notifications.map(notification => {\n        var _notification$timesta;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `notification-item ${!notification.read ? 'unread' : ''}`,\n          onClick: () => markNotificationAsRead(notification.id),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `role-badge ${notification.role}`,\n              children: \"Important Announcement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timestamp\",\n              children: (_notification$timesta = notification.timestamp) === null || _notification$timesta === void 0 ? void 0 : _notification$timesta.toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this), !notification.read && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"unread-dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"notification-text\",\n            children: notification.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this)]\n        }, notification.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      id: \"background-video\",\n      loop: true,\n      autoPlay: true,\n      muted: true,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: darkblue,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), \"Your browser does not support the video tag.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `sidebar-button ${showUserPanel ? 'active' : ''}`,\n          onClick: () => togglePanel('profile'),\n          children: /*#__PURE__*/_jsxDEV(UserCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sidebar-button\",\n          children: /*#__PURE__*/_jsxDEV(MessageSquare, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sidebar-button\",\n          children: /*#__PURE__*/_jsxDEV(PlusCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `sidebar-button ${showAnnouncements ? 'active' : ''}`,\n          onClick: () => togglePanel('announcements'),\n          children: /*#__PURE__*/_jsxDEV(Bell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `sidebar-button notification-button ${showNotifications ? 'active' : ''}`,\n          onClick: () => togglePanel('notifications'),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-icon-container\",\n            children: [/*#__PURE__*/_jsxDEV(Bell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"notification-badge\",\n              children: unreadCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        style: {\n          marginRight: showAnnouncements || showUserPanel || showNotifications ? '320px' : '0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-area\",\n          ref: chatContainerRef,\n          children: messages.map((msg, index) => renderMessage(msg, index))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyDown: e => e.key === 'Enter' && !e.shiftKey && sendMessage(),\n            placeholder: \"Type a message or 'doc:' to request a document...\",\n            disabled: isSending\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"send-button\",\n            onClick: sendMessage,\n            disabled: isSending,\n            children: isSending ? /*#__PURE__*/_jsxDEV(RefreshCw, {\n              className: \"spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 28\n            }, this) : /*#__PURE__*/_jsxDEV(Send, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), showAnnouncements && renderAnnouncements(), showNotifications && renderNotifications(), showUserPanel && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => togglePanel(null),\n            children: /*#__PURE__*/_jsxDEV(X, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-avatar\",\n            children: userProfile.photo ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: userProfile.photo,\n              alt: \"User Avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(UserCircle, {\n              size: 64\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: userProfile.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: userProfile.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"role-badge\",\n              children: userProfile.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"logout-button\",\n            onClick: handleLogout,\n            children: [/*#__PURE__*/_jsxDEV(LogOut, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this), \"Logout\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatbotUI, \"kCM13RH8J1v4ec1P4B1GAz5ghrU=\", false, function () {\n  return [useNavigate];\n});\n_c = ChatbotUI;\nexport default ChatbotUI;\nvar _c;\n$RefreshReg$(_c, \"ChatbotUI\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","auth","db","doc","getDoc","updateDoc","UserCircle","MessageSquare","PlusCircle","Bell","Send","X","RefreshCw","Volume2","Download","AlertCircle","LogOut","darkblue","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatbotUI","_s","navigate","message","setMessage","messages","setMessages","text","type","showAnnouncements","setShowAnnouncements","showUserPanel","setShowUserPanel","showNotifications","setShowNotifications","isSending","setIsSending","announcements","setAnnouncements","notifications","setNotifications","loadingAnnouncements","setLoadingAnnouncements","unreadCount","setUnreadCount","userProfile","setUserProfile","name","email","role","photo","videoRef","chatContainerRef","announcementsRef","notificationsRef","fetchUserProfile","user","currentUser","userDoc","uid","exists","userData","data","error","console","normalizedRole","toLowerCase","replace","unsubscribe","collection","where","orderBy","onSnapshot","snapshot","newNotifications","docs","map","_doc$data$timestamp","id","timestamp","toDate","filter","n","read","length","fetchAnnouncements","current","scrollTop","scrollHeight","sendMessage","trim","userMessage","prevMessages","startsWith","fileName","slice","response","post","userRole","canAccess","botMessage","downloadUrl","isError","errorMessage","get","markNotificationAsRead","notificationId","handleLogout","signOut","togglePanel","panel","renderMessage","msg","index","className","children","_jsxFileName","lineNumber","columnNumber","href","target","rel","size","onClick","regenerateResponse","disabled","playTextToSpeech","renderNotifications","ref","notification","_notification$timesta","toLocaleString","loop","autoPlay","muted","src","style","marginRight","value","onChange","e","onKeyDown","key","shiftKey","placeholder","renderAnnouncements","alt","_c","$RefreshReg$"],"sources":["C:/Users/Ammar Abdulhussain/Desktop/phullstack/src/user/chat.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { auth, db } from '../firebase';\r\nimport { doc, getDoc, updateDoc } from 'firebase/firestore';\r\nimport {\r\n  UserCircle,\r\n  MessageSquare,\r\n  PlusCircle,\r\n  Bell,\r\n  Send,\r\n  X,\r\n  RefreshCw,\r\n  Volume2,\r\n  Download,\r\n  AlertCircle,\r\n  LogOut\r\n} from 'lucide-react';\r\nimport './chat.css';\r\nimport darkblue from \"../assets/darkblue.mp4\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ChatbotUI = () => {\r\n  const navigate = useNavigate();\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([\r\n    { text: 'Hello! How can I assist you today?', type: 'ai' }\r\n  ]);\r\n  const [showAnnouncements, setShowAnnouncements] = useState(false);\r\n  const [showUserPanel, setShowUserPanel] = useState(false);\r\n  const [showNotifications, setShowNotifications] = useState(false);\r\n  const [isSending, setIsSending] = useState(false);\r\n  const [announcements, setAnnouncements] = useState([]);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [loadingAnnouncements, setLoadingAnnouncements] = useState(false);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [userProfile, setUserProfile] = useState({\r\n    name: '',\r\n    email: '',\r\n    role: '',\r\n    photo: ''\r\n  });\r\n\r\n  const videoRef = useRef(null);\r\n  const chatContainerRef = useRef(null);\r\n  const announcementsRef = useRef(null);\r\n  const notificationsRef = useRef(null);\r\n\r\n  // Fetch user profile and set up notification subscription\r\n  useEffect(() => {\r\n    const fetchUserProfile = async () => {\r\n      const user = auth.currentUser;\r\n      if (user) {\r\n        try {\r\n          const userDoc = await getDoc(doc(db, 'Users', user.uid));\r\n          if (userDoc.exists()) {\r\n            const userData = userDoc.data();\r\n            setUserProfile({\r\n              name: userData.name,\r\n              email: user.email,\r\n              role: userData.role,\r\n              photo: userData.photo || ''\r\n            });\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching user profile:', error);\r\n        }\r\n      } else {\r\n        navigate('/login');\r\n      }\r\n    };\r\n\r\n    fetchUserProfile();\r\n  }, [navigate]);\r\n\r\n  // Subscribe to notifications\r\n  useEffect(() => {\r\n    if (userProfile.role) {\r\n      const normalizedRole = userProfile.role.toLowerCase().replace('/', '_').replace(' ', '_');\r\n      const unsubscribe = db.collection('notifications')\r\n        .where('role', '==', normalizedRole)\r\n        .orderBy('timestamp', 'desc')\r\n        .onSnapshot(snapshot => {\r\n          const newNotifications = snapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n            timestamp: doc.data().timestamp?.toDate()\r\n          }));\r\n          setNotifications(newNotifications);\r\n          setUnreadCount(newNotifications.filter(n => !n.read).length);\r\n        });\r\n\r\n      return () => unsubscribe();\r\n    }\r\n  }, [userProfile.role]);\r\n\r\n  // Fetch announcements when panel is opened\r\n  useEffect(() => {\r\n    if (showAnnouncements && userProfile.role) {\r\n      fetchAnnouncements();\r\n    }\r\n  }, [showAnnouncements, userProfile.role]);\r\n\r\n  // Auto-scroll chat\r\n  useEffect(() => {\r\n    if (chatContainerRef.current) {\r\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  // Scroll panels to top when content changes\r\n  useEffect(() => {\r\n    if (announcementsRef.current && !loadingAnnouncements) {\r\n      announcementsRef.current.scrollTop = 0;\r\n    }\r\n    if (notificationsRef.current) {\r\n      notificationsRef.current.scrollTop = 0;\r\n    }\r\n  }, [announcements, notifications, loadingAnnouncements]);\r\n\r\n  const sendMessage = async () => {\r\n    if (message.trim() && !isSending) {\r\n      const userMessage = { text: message, type: 'user' };\r\n      setMessages(prevMessages => [...prevMessages, userMessage]);\r\n      setMessage('');\r\n      setIsSending(true);\r\n\r\n      try {\r\n        if (message.startsWith('doc:')) {\r\n          const fileName = message.slice(4).trim();\r\n          const response = await axios.post('http://localhost:8000/retrieve-document/', {\r\n            fileName,\r\n            userRole: userProfile.role\r\n          });\r\n          \r\n          if (response.data.canAccess) {\r\n            const botMessage = { \r\n              text: `Here's the document you requested: ${fileName}`, \r\n              type: 'ai',\r\n              downloadUrl: response.data.downloadUrl\r\n            };\r\n            setMessages(prevMessages => [...prevMessages, botMessage]);\r\n          } else {\r\n            const botMessage = { \r\n              text: 'Access Denied: You don\\'t have permission to access this document.',\r\n              type: 'ai',\r\n              isError: true\r\n            };\r\n            setMessages(prevMessages => [...prevMessages, botMessage]);\r\n          }\r\n        } else {\r\n          const response = await axios.post('http://localhost:8000/chat/', {\r\n            message,\r\n            userRole: userProfile.role\r\n          });\r\n          const botMessage = { text: response.data.response, type: 'ai' };\r\n          setMessages(prevMessages => [...prevMessages, botMessage]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error sending message:', error);\r\n        const errorMessage = { \r\n          text: 'Sorry, I encountered an error. Please try again.',\r\n          type: 'ai',\r\n          isError: true \r\n        };\r\n        setMessages(prevMessages => [...prevMessages, errorMessage]);\r\n      } finally {\r\n        setIsSending(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchAnnouncements = async () => {\r\n    setLoadingAnnouncements(true);\r\n    try {\r\n      const normalizedRole = userProfile.role.toLowerCase().replace('/', '_').replace(' ', '_');\r\n      const response = await axios.get(`http://localhost:8000/announcements/${normalizedRole}`);\r\n      setAnnouncements(response.data.announcements);\r\n    } catch (error) {\r\n      console.error('Error fetching announcements:', error);\r\n    } finally {\r\n      setLoadingAnnouncements(false);\r\n    }\r\n  };\r\n\r\n  const markNotificationAsRead = async (notificationId) => {\r\n    try {\r\n      await updateDoc(doc(db, 'notifications', notificationId), {\r\n        read: true\r\n      });\r\n    } catch (error) {\r\n      console.error('Error marking notification as read:', error);\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await auth.signOut();\r\n      navigate('/login');\r\n    } catch (error) {\r\n      console.error('Error logging out:', error);\r\n    }\r\n  };\r\n\r\n  const togglePanel = (panel) => {\r\n    setShowNotifications(panel === 'notifications');\r\n    setShowAnnouncements(panel === 'announcements');\r\n    setShowUserPanel(panel === 'profile');\r\n  };\r\n\r\n  const renderMessage = (msg, index) => {\r\n    return (\r\n      <div key={index} className={`message-container ${msg.type === 'user' ? 'user-message-container' : 'ai-message-container'}`}>\r\n        <div className={`message ${msg.type === 'user' ? 'user-message' : 'ai-message'} ${msg.isError ? 'error-message' : ''}`}>\r\n          {msg.text.startsWith('doc:') ? (\r\n            <>\r\n              <span className=\"doc-highlight\">doc:</span>\r\n              {msg.text.slice(4)}\r\n            </>\r\n          ) : (\r\n            msg.text\r\n          )}\r\n          {msg.downloadUrl && (\r\n            <a href={msg.downloadUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"download-link\">\r\n              <Download size={16} /> Download\r\n            </a>\r\n          )}\r\n        </div>\r\n        {msg.type === 'ai' && !msg.isError && (\r\n          <div className=\"message-actions\">\r\n            <button className=\"action-button\" onClick={() => regenerateResponse(index)} disabled={isSending}>\r\n              <RefreshCw size={16} className={isSending ? 'spin' : ''} />\r\n            </button>\r\n            <button className=\"action-button\" onClick={() => playTextToSpeech(msg.text)}>\r\n              <Volume2 size={16} />\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Rest of your existing functions (sendMessage, playTextToSpeech, regenerateResponse, etc.)...\r\n\r\n  const renderNotifications = () => (\r\n    <div className=\"notifications-panel\" ref={notificationsRef}>\r\n      <div className=\"panel-header\">\r\n        <h2>Notifications</h2>\r\n        <button onClick={() => togglePanel(null)}>\r\n          <X size={20} />\r\n        </button>\r\n      </div>\r\n      <div className=\"notifications-content\">\r\n        {notifications.length === 0 ? (\r\n          <div className=\"no-notifications\">\r\n            <AlertCircle size={24} />\r\n            <span>No notifications</span>\r\n          </div>\r\n        ) : (\r\n          notifications.map((notification) => (\r\n            <div\r\n              key={notification.id}\r\n              className={`notification-item ${!notification.read ? 'unread' : ''}`}\r\n              onClick={() => markNotificationAsRead(notification.id)}\r\n            >\r\n              <div className=\"notification-header\">\r\n                <span className={`role-badge ${notification.role}`}>\r\n                  Important Announcement\r\n                </span>\r\n                <span className=\"timestamp\">\r\n                  {notification.timestamp?.toLocaleString()}\r\n                </span>\r\n              </div>\r\n              {!notification.read && <div className=\"unread-dot\" />}\r\n              <p className=\"notification-text\">{notification.text}</p>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <video ref={videoRef} id=\"background-video\" loop autoPlay muted>\r\n        <source src={darkblue} type=\"video/mp4\" />\r\n        Your browser does not support the video tag.\r\n      </video>\r\n\r\n      <div className=\"chatbot-window\">\r\n        <div className=\"sidebar\">\r\n          <button \r\n            className={`sidebar-button ${showUserPanel ? 'active' : ''}`}\r\n            onClick={() => togglePanel('profile')}\r\n          >\r\n            <UserCircle />\r\n          </button>\r\n          <button className=\"sidebar-button\">\r\n            <MessageSquare />\r\n          </button>\r\n          <button className=\"sidebar-button\">\r\n            <PlusCircle />\r\n          </button>\r\n          <button \r\n            className={`sidebar-button ${showAnnouncements ? 'active' : ''}`}\r\n            onClick={() => togglePanel('announcements')}\r\n          >\r\n            <Bell />\r\n          </button>\r\n          <button \r\n            className={`sidebar-button notification-button ${showNotifications ? 'active' : ''}`}\r\n            onClick={() => togglePanel('notifications')}\r\n          >\r\n            <div className=\"notification-icon-container\">\r\n              <Bell />\r\n              {unreadCount > 0 && (\r\n                <span className=\"notification-badge\">{unreadCount}</span>\r\n              )}\r\n            </div>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"main-content\" style={{ \r\n          marginRight: (showAnnouncements || showUserPanel || showNotifications) ? '320px' : '0' \r\n        }}>\r\n          <div className=\"chat-area\" ref={chatContainerRef}>\r\n            {messages.map((msg, index) => renderMessage(msg, index))}\r\n          </div>\r\n\r\n          <div className=\"input-area\">\r\n            <input\r\n              type=\"text\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              onKeyDown={(e) => e.key === 'Enter' && !e.shiftKey && sendMessage()}\r\n              placeholder=\"Type a message or 'doc:' to request a document...\"\r\n              disabled={isSending}\r\n            />\r\n            <button \r\n              className=\"send-button\" \r\n              onClick={sendMessage} \r\n              disabled={isSending}\r\n            >\r\n              {isSending ? <RefreshCw className=\"spin\" /> : <Send />}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {showAnnouncements && renderAnnouncements()}\r\n        {showNotifications && renderNotifications()}\r\n        \r\n        {showUserPanel && (\r\n          <div className=\"user-panel\">\r\n            <div className=\"panel-header\">\r\n              <h2>Profile</h2>\r\n              <button onClick={() => togglePanel(null)}>\r\n                <X size={20} />\r\n              </button>\r\n            </div>\r\n            <div className=\"profile-content\">\r\n              <div className=\"profile-avatar\">\r\n                {userProfile.photo ? (\r\n                  <img src={userProfile.photo} alt=\"User Avatar\" />\r\n                ) : (\r\n                  <UserCircle size={64} />\r\n                )}\r\n              </div>\r\n              <div className=\"profile-info\">\r\n                <h3>{userProfile.name}</h3>\r\n                <p>{userProfile.email}</p>\r\n                <p className=\"role-badge\">{userProfile.role}</p>\r\n              </div>\r\n              <button className=\"logout-button\" onClick={handleLogout}>\r\n                <LogOut size={16} />\r\n                Logout\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatbotUI;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}